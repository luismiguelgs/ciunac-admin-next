import { AppProvider } from '@toolpad/core/nextjs';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter';
import theme from '@/theme';
//import { Metadata } from 'next';
import NAVIGATION from '@/components/Navigation';
import { SessionProvider, signIn, signOut } from 'next-auth/react';
import { auth } from '@/auth';
import { Author} from 'next/dist/lib/metadata/types/metadata-types';

export const metadata = {
	title: "Ciunac Admin",
	description: "Generated by create next app",
	generator: "Next.js",
	manifest: "/manifest.json",
	keywords: ["nextjs", "nextjs14", "next14", "pwa", "next-pwa"],
	authors: [
		{ name: "Luis Miguel" },
		{
			name: "Luis Miguel",
			url: "https://pe.linkedin.com/in/luis-miguel-gs",
		},
	],
	icons: [
		{ rel: "apple-touch-icon", url: "icons/icon-128x128.png" },
		{ rel: "icon", url: "icons/icon-128x128.png" } ,
	],
};

const AUTHENTICATION = {
  signIn,
  signOut
}

export default async function RootLayout({ children, }: Readonly<{  children: React.ReactNode; }>) 
{
	const session = await auth()

	return (
		<html lang="en" data-toolpad-color-scheme="light">
			<head>
				<title>{metadata.title as string}</title>
				<meta name="description" content={metadata.description as string} />
				<meta name="generator" content={metadata.generator as string} />
				<link rel="manifest" href={metadata.manifest as string} />
				<meta name="keywords" content={(metadata.keywords as string[]).join(", ")} />
				{(metadata.authors as Author[]).map(({ name, url }, index) => (
					<meta key={index} name="author" content={name} {...(url && { href: url })} />
				))}
				{(metadata.icons! ).map(({ rel, url }, index) => (
					<link key={index} rel={rel} href={url} />
				))}
			</head>
			<body>
				<SessionProvider session={session}>
					<AppRouterCacheProvider options={{ enableCssLayer: true }}>
						<AppProvider 
							theme={theme} 
							navigation={NAVIGATION} 
							branding={{
								logo: <img src="/apple-touch-icon.png" alt="CIUNAC logo" />,
								title: 'CIUNAC ADMIN',
							}}
							session={session}
							authentication={AUTHENTICATION}
						>
							{children}
						</AppProvider>
					</AppRouterCacheProvider>
				</SessionProvider>
			</body>
    	</html>
	);
}
